// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SGA.Infra.Repository.Context;

namespace SGA.Infra.Repository.Migrations
{
    [DbContext(typeof(SgaContext))]
    partial class SgaContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.1-rtm-30846")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("SGA.Domain.Entities.Models.Adoption", b =>
                {
                    b.Property<Guid>("ResponsibleId")
                        .HasColumnName("cd_responsavel");

                    b.Property<Guid>("PetId")
                        .HasColumnName("cd_animal");

                    b.Property<DateTime>("DateAdoption")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("dt_adocao")
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("GETDATE()");

                    b.HasKey("ResponsibleId", "PetId");

                    b.HasAlternateKey("PetId")
                        .HasName("animal_unique");

                    b.ToTable("adocao","dbo");
                });

            modelBuilder.Entity("SGA.Domain.Entities.Models.Pet", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("cd_animal");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnName("dc_animal")
                        .HasColumnType("varchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnName("nm_animal")
                        .HasColumnType("varchar(10)")
                        .HasMaxLength(10);

                    b.Property<Guid>("TypePetId")
                        .HasColumnName("cd_tipo_animal");

                    b.HasKey("Id");

                    b.HasIndex("TypePetId");

                    b.ToTable("animal","dbo");
                });

            modelBuilder.Entity("SGA.Domain.Entities.Models.Responsible", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("cd_responsavel");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnName("nm_responsavel")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.ToTable("responsavel","dbo");
                });

            modelBuilder.Entity("SGA.Domain.Entities.Models.TypePet", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("cd_tipo_animal");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnName("dc_tipo_animal")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.ToTable("tipo_animal","dbo");
                });

            modelBuilder.Entity("SGA.Domain.Entities.Models.Adoption", b =>
                {
                    b.HasOne("SGA.Domain.Entities.Models.Pet", "Pet")
                        .WithMany()
                        .HasForeignKey("PetId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("SGA.Domain.Entities.Models.Responsible", "Responsible")
                        .WithMany()
                        .HasForeignKey("ResponsibleId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("SGA.Domain.Entities.Models.Pet", b =>
                {
                    b.HasOne("SGA.Domain.Entities.Models.TypePet", "TypePet")
                        .WithMany()
                        .HasForeignKey("TypePetId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("SGA.Domain.Entities.Models.Responsible", b =>
                {
                    b.OwnsOne("SGA.Domain.Entities.ValueObjects.Cpf", "Cpf", b1 =>
                        {
                            b1.Property<Guid?>("ResponsibleId");

                            b1.Property<string>("Number")
                                .IsRequired()
                                .HasColumnName("cpf_responsavel")
                                .HasColumnType("varchar(11)");

                            b1.ToTable("responsavel","dbo");

                            b1.HasOne("SGA.Domain.Entities.Models.Responsible")
                                .WithOne("Cpf")
                                .HasForeignKey("SGA.Domain.Entities.ValueObjects.Cpf", "ResponsibleId")
                                .OnDelete(DeleteBehavior.Cascade);
                        });

                    b.OwnsOne("SGA.Domain.Entities.ValueObjects.Email", "Email", b1 =>
                        {
                            b1.Property<Guid?>("ResponsibleId");

                            b1.Property<string>("Address")
                                .IsRequired()
                                .HasColumnName("email_responsavel")
                                .HasColumnType("varchar(30)");

                            b1.ToTable("responsavel","dbo");

                            b1.HasOne("SGA.Domain.Entities.Models.Responsible")
                                .WithOne("Email")
                                .HasForeignKey("SGA.Domain.Entities.ValueObjects.Email", "ResponsibleId")
                                .OnDelete(DeleteBehavior.Cascade);
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
